<?php

/**
 * @package    THM_Organizer.UnitTest
 * @author     Wolf Rost <Wolf.Rost@mni.thm.de>
 * @copyright  Copyright (C) 2005 - 2014 Open Source Matters, Inc. All rights reserved.
 * @license    GNU General Public License version 2 or later; see LICENSE
 */
// Include the SUT class
require_once JPATH_BASE . '/components/com_thm_organizer/models/teacher_ajax.php';

/**
 * Class THM_OrganizerModelConsumptionSiteTest
 *
 * @package             com_thm_organizer
 * @coversDefaultClass  THM_OrganizerModelConsumption
 *
 * @requires            extension sqlite3
 */
class THM_OrganizerModelTeacherAjaxSiteTest extends TestCaseDatabase {

    /**
     * Minimun Joomla version to run this test,
     * if the Joomla version is below this version the test will be skipped.
     */
    const MIN_JOOMLA_VERSION_FOR_TESTS = "3";

    /**
     * @var THM_OrganizerModelConsumption
     * @access protected
     */
    protected $object, $data, $eventid;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     *
     * @access protected
     * 
     * @return  null
     */
    protected function setUp() {
        parent::setup();
        /* if(!JVersion::isCompatible(self::MIN_JOOMLA_VERSION_FOR_TESTS))
          {
          $this->markTestSkipped("Minimum Joomla version must be " . self::MIN_JOOMLA_VERSION_FOR_TESTS);
          }
         */
        //parent::setup();

        $this->saveFactoryState();



        JFactory::$session = $this->getMockSession();
        //JFactory::$config = $this->getMockConfig();
        //JFactory::$application = $this->getMockCmsApp();
        JFactory::$application = $this->getMockApplication();
        // JFactory::$application-
        //var_dump(JFactory::$application->);
        //var_dump(JFactory::$application);
        //JFactory::$application->c            
        //JFactory::$application = $this->getMockApplication();
        //JFactory::$document = $this->getMockDocument();
        //JFactory::$session = $this->getMockSession();
        //var_dump($this->getMockConfig());   

        $connect = parent::getConnection();
        $this->_db = JFactory::getDbo();
        $this->object = new THM_OrganizerModelTeacher_Ajax;

        $this->data['programID'] = "1";
        $this->data['poolID'] = "-1";
        $this->data['title'] = "test";
        /*$this->data['userID'] = JFactory::getUser()->id;
        $this->data['alias'] = JApplication::stringURLSafe($this->data['title']);
        $this->data['fulltext'] = "test"; //$this->getDbo()->escape($data['description']);
        $this->data['startdate'] = date("d.m.Y");
        $this->data['starttime'] = date("H:i");
        $this->data['endtime'] = date("H:i");
        $this->data['id'] = 0;
        $this->data['contentCatID'] = "1";*/
        
        
        //$date = JFactory::getDate();
        //var_dump($date);
        //var_dump(JFactory::getApplication()->getCfg('dbtype'));
        JRequest::setVar('jform', $this->data, 'get');
    }

    /**
     * Overrides the parent tearDown method.
     *
     * @return  void
     *
     * @see     PHPUnit_Framework_TestCase::tearDown()
     * @since   3.2
     */
    protected function tearDown() {
        $this->restoreFactoryState();

        $this->object = null;

        parent::tearDown(); // TODO: Change the autogenerated stub
    }

    /**
     * Gets the data set to be loaded into the database during setup
     *
     * @return xml dataset
     */
    protected function getDataSet() {
        $dataSet = new PHPUnit_Extensions_Database_DataSet_CsvDataSet(',', "'", '\\');
        $dataSet->addTable('jos_thm_organizer_teachers', JPATH_TEST_DATABASE . '/jos_thm_organizer_teachers.csv');
        $dataSet->addTable('jos_thm_organizer_mappings', JPATH_TEST_DATABASE . '/jos_thm_organizer_mappings.csv');
        return $dataSet;
    }

    /**
     * Method to test the getSchedulesFromDB function
     * 
     * @return null
     */
    public function testteachersByProgramOrPool() {
        $actual = $this->object->teachersByProgramOrPool();
        $this->assertEquals('', $actual);
    }
  
}
